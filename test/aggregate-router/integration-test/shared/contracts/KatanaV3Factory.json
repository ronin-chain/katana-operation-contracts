{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"beacon","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"createPool","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"fee","type":"uint24","internalType":"uint24"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"enableFeeAmount","inputs":[{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"feeProtocolNum","type":"uint8","internalType":"uint8"},{"name":"feeProtocolDen","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"feeAmountProtocol","inputs":[{"name":"","type":"uint24","internalType":"uint24"}],"outputs":[{"name":"numerator","type":"uint8","internalType":"uint8"},{"name":"denominator","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"feeAmountTickSpacing","inputs":[{"name":"","type":"uint24","internalType":"uint24"}],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"flashLoanEnabled","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getPool","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint24","internalType":"uint24"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"beacon_","type":"address","internalType":"address"},{"name":"owner_","type":"address","internalType":"address"},{"name":"treasury_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"parameters","inputs":[],"outputs":[{"name":"factory","type":"address","internalType":"address"},{"name":"token0","type":"address","internalType":"address"},{"name":"token1","type":"address","internalType":"address"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"setTreasury","inputs":[{"name":"_treasury","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toggleFlashLoanPermission","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"treasury","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"FeeAmountEnabled","inputs":[{"name":"fee","type":"uint24","indexed":true,"internalType":"uint24"},{"name":"tickSpacing","type":"int24","indexed":true,"internalType":"int24"},{"name":"protocolFeeNum","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"protocolFeeDen","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"FlashLoanPermissionUpdated","inputs":[{"name":"enabled","type":"bool","indexed":true,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"PoolCreated","inputs":[{"name":"token0","type":"address","indexed":true,"internalType":"address"},{"name":"token1","type":"address","indexed":true,"internalType":"address"},{"name":"fee","type":"uint24","indexed":true,"internalType":"uint24"},{"name":"tickSpacing","type":"int24","indexed":false,"internalType":"int24"},{"name":"pool","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TreasuryChanged","inputs":[{"name":"oldTreasury","type":"address","indexed":true,"internalType":"address"},{"name":"newTreasury","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x608060405234801561001057600080fd5b50600080546001600160a01b0319166001179055611024806100336000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806365d61c6c1161008c578063a167129511610066578063a167129514610229578063b4a91cbd14610265578063c0c53b8b146102aa578063f0f44260146102e2576100cf565b806365d61c6c146101bb57806389035730146101d75780638da5cb5b14610221576100cf565b80631698ee82146100d457806322afcccb1461012c57806327c28660146101655780634cad9140146101a357806359659e90146101ab57806361d027b3146101b3575b600080fd5b610110600480360360608110156100ea57600080fd5b5080356001600160a01b03908116916020810135909116906040013562ffffff16610308565b604080516001600160a01b039092168252519081900360200190f35b61014e6004803603602081101561014257600080fd5b503562ffffff16610334565b6040805160029290920b8252519081900360200190f35b6101a16004803603608081101561017b57600080fd5b5062ffffff81351690602081013560020b9060ff60408201358116916060013516610349565b005b6101a16104ad565b61011061050e565b61011061051d565b6101c361052c565b604080519115158252519081900360200190f35b6101df61053c565b604080516001600160a01b0396871681529486166020860152929094168383015262ffffff16606083015260029290920b608082015290519081900360a00190f35b610110610573565b6101106004803603606081101561023f57600080fd5b5080356001600160a01b03908116916020810135909116906040013562ffffff16610582565b6102876004803603602081101561027b57600080fd5b503562ffffff166107d0565b604051808360ff1681526020018260ff1681526020019250505060405180910390f35b6101a1600480360360608110156102c057600080fd5b506001600160a01b0381358116916020810135821691604090910135166107ee565b6101a1600480360360208110156102f857600080fd5b50356001600160a01b03166109ce565b60086020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b60066020526000908152604090205460020b81565b610351610a77565b620f42408462ffffff16106103ad576040805162461bcd60e51b815260206004820152601d60248201527f4b6174616e615633466163746f72793a204645455f544f4f5f48494748000000604482015290519081900360640190fd5b60008360020b1380156103c457506140008360020b125b6103ff5760405162461bcd60e51b8152600401808060200182810382526025815260200180610f2d6025913960400191505060405180910390fd5b8060ff168260ff16106104435760405162461bcd60e51b8152600401808060200182810382526025815260200180610f526025913960400191505060405180910390fd5b62ffffff8416600090815260066020526040902054600290810b900b1561049b5760405162461bcd60e51b815260040180806020018281038252602b815260200180610f77602b913960400191505060405180910390fd5b6104a784848484610ad8565b50505050565b6104b5610a77565b6005805460ff600160a01b808304821615810260ff60a01b199093169290921792839055604051919092049091161515907fc30b40f4f206ddd1a59cfd25b348d6f1980e74ceb1bf543419242e338bd8366e90600090a2565b6000546001600160a01b031681565b6005546001600160a01b031681565b600554600160a01b900460ff1681565b600154600280546003546001600160a01b0393841693918216929181169162ffffff600160a01b83041691600160b81b9004900b85565b6004546001600160a01b031681565b6000600460009054906101000a90046001600160a01b03166001600160a01b0316636a22dede6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d257600080fd5b505afa1580156105e6573d6000803e3d6000fd5b505050506040513d60208110156105fc57600080fd5b50516001600160a01b031633146106445760405162461bcd60e51b8152600401808060200182810382526029815260200180610fa26029913960400191505060405180910390fd5b826001600160a01b0316846001600160a01b0316141561066357600080fd5b600080846001600160a01b0316866001600160a01b031610610686578486610689565b85855b90925090506001600160a01b0382166106a157600080fd5b62ffffff8416600090815260066020526040902054600290810b9081900b6106c857600080fd5b6001600160a01b0383811660009081526008602090815260408083208685168452825280832062ffffff8a168452909152902054161561070757600080fd5b6107143084848885610b8c565b6001600160a01b03808516600081815260086020818152604080842089871680865290835281852062ffffff8e168087529084528286208054988a166001600160a01b0319998a1681179091558287529484528286208787528452828620818752845294829020805490971684179096558051600289900b815291820192909252815195995091947f783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b71189281900390910190a45050509392505050565b60076020526000908152604090205460ff8082169161010090041682565b6000546001600160a01b0316156108365760405162461bcd60e51b8152600401808060200182810382526024815260200180610fcb6024913960400191505060405180910390fd5b6001600160a01b038316610891576040805162461bcd60e51b815260206004820152601f60248201527f4b6174616e615633466163746f72793a20494e56414c49445f424541434f4e00604482015290519081900360640190fd5b6001600160a01b0382166108ec576040805162461bcd60e51b815260206004820152601e60248201527f4b6174616e615633466163746f72793a20494e56414c49445f4f574e45520000604482015290519081900360640190fd5b6001600160a01b0381166109315760405162461bcd60e51b8152600401808060200182810382526021815260200180610f0c6021913960400191505060405180910390fd5b600080546001600160a01b038086166001600160a01b031992831617835560048054868316908416179055600580549185169190921681179091556040519091907f8c3aa5f43a388513435861bf27dfad7829cd248696fed367c62d441f62954496908290a36109a7606460016005600a610ad8565b6109b8610bb8603c6005601e610ad8565b6109c961271060c8600f6064610ad8565b505050565b6109d6610a77565b6001600160a01b038116610a1b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610f0c6021913960400191505060405180910390fd5b6005546040516001600160a01b038084169216907f8c3aa5f43a388513435861bf27dfad7829cd248696fed367c62d441f6295449690600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03163314610ad6576040805162461bcd60e51b815260206004820152601a60248201527f4b6174616e615633466163746f72793a20464f5242494444454e000000000000604482015290519081900360640190fd5b565b62ffffff8481166000818152600660209081526040808320805462ffffff191660028a900b9687161790558051808201825260ff888116808352888216838601818152888852600787529685902093518454975160ff199098169084161761ff00191661010097909316969096029190911790915581519081529182019290925281517f7903160027ccb28d943669d1040216aeb276ca8dbd083c36128affe6712e0122929181900390910190a350505050565b6040805160a0810182526001600160a01b038781168083528782166020840181905287831684860181905262ffffff88811660608701819052600289810b6080909801889052600180546001600160a01b031990811690971790558054861690941784556003805490951690921762ffffff60a01b1916600160a01b9092029190911762ffffff60b81b1916600160b81b9590920b169390930292909217909155600080548351630442fd0560e51b8152935191938493919091169163885fa0a0916004808201928692909190829003018186803b158015610c6d57600080fd5b505afa158015610c81573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610caa57600080fd5b8101908080516040519392919084640100000000821115610cca57600080fd5b908301906020820185811115610cdf57600080fd5b8251640100000000811182820188101715610cf957600080fd5b82525081516020918201929091019080838360005b83811015610d26578181015183820152602001610d0e565b50505050905090810190601f168015610d535780820380516001836020036101000a031916815260200191505b506040525050509050600086868660405160200180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff1681526020019350505050604051602081830303815290604052805190602001209050610dba60008284610df2565b600180546001600160a01b0319908116909155600280549091169055600380546001600160d01b031916905598975050505050505050565b60008084471015610e4a576040805162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b8251610e9d576040805162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015290519081900360640190fd5b8383516020850187f590506001600160a01b038116610f03576040805162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015290519081900360640190fd5b94935050505056fe4b6174616e615633466163746f72793a20494e56414c49445f54524541535552594b6174616e615633466163746f72793a20494e56414c49445f5449434b5f53504143494e474b6174616e615633466163746f72793a20494e56414c49445f4645455f50524f544f434f4c4b6174616e615633466163746f72793a204645455f414d4f554e545f414c52454144595f454e41424c45444b6174616e615633466163746f72793a20494e56414c49445f504f534954494f4e5f4d414e414745524b6174616e615633466163746f72793a20414c52454144595f494e495449414c495a4544a2646970667358221220553bcf4c2594e38c20d6139fa33fc14860af4a8cabce323ab895211fa2f67ef264736f6c63430007060033","sourceMap":"334:4536:58:-:0;;;1020:74;;;;;;;;;-1:-1:-1;1070:6:58;:19;;-1:-1:-1;;1070:19:58;-1:-1:-1;1070:19:58;;;-1:-1:-1;;;;334:4536:58;;;;","linkReferences":{}},"deployedBytecode":{"object":"","sourceMap":"334:4536:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:90;;;;;;;;;;;;;;;;-1:-1:-1;925:90:58;;-1:-1:-1;;;;;925:90:58;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;925:90:58;;;;;;;;;;;;;;725:61;;;;;;;;;;;;;;;;-1:-1:-1;725:61:58;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3741:816;;;;;;;;;;;;;;;;-1:-1:-1;3741:816:58;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3535:167;;;:::i;330:30:61:-;;;:::i;577:32:58:-;;;:::i;648:37::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;532::61;;;:::i;:::-;;;;-1:-1:-1;;;;;532:37:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;532:37:61;;;509:29:58;;;:::i;2456:850::-;;;;;;;;;;;;;;;;-1:-1:-1;2456:850:58;;-1:-1:-1;;;;;2456:850:58;;;;;;;;;;;;;;;;;;:::i;825:61::-;;;;;;;;;;;;;;;;-1:-1:-1;825:61:58;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1272:1145;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1272:1145:58;;;;;;;;;;;;;;;;;;;:::i;3310:221::-;;;;;;;;;;;;;;;;-1:-1:-1;3310:221:58;-1:-1:-1;;;;;3310:221:58;;:::i;925:90::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;925:90:58;;:::o;725:61::-;;;;;;;;;;;;;;;:::o;3741:816::-;1125:13;:11;:13::i;:::-;3901:7:::1;3895:3;:13;;;3887:55;;;::::0;;-1:-1:-1;;;3887:55:58;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4234:1;4220:11;:15;;;:38;;;;;4253:5;4239:11;:19;;;4220:38;4212:88;;;;-1:-1:-1::0;;;4212:88:58::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4331:14;4314:31;;:14;:31;;;4306:81;;;;-1:-1:-1::0;;;4306:81:58::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4401:25;::::0;::::1;;::::0;;;:20:::1;:25;::::0;;;;;::::1;::::0;;::::1;:30:::0;::::1;::::0;4393:86:::1;;;;-1:-1:-1::0;;;4393:86:58::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4486:66;4503:3;4508:11;4521:14;4537;4486:16;:66::i;:::-;3741:816:::0;;;;:::o;3535:167::-;1125:13;:11;:13::i;:::-;3626:16:::1;::::0;;::::1;-1:-1:-1::0;;;3626:16:58;;::::1;::::0;::::1;3625:17;3606:36:::0;::::1;-1:-1:-1::0;;;;3606:36:58;;::::1;::::0;;;::::1;::::0;;;;3653:44:::1;::::0;3680:16;;;::::1;::::0;;::::1;3653:44;;::::0;::::1;::::0;-1:-1:-1;;3653:44:58::1;3535:167::o:0;330:30:61:-;;;-1:-1:-1;;;;;330:30:61;;:::o;577:32:58:-;;;-1:-1:-1;;;;;577:32:58;;:::o;648:37::-;;;-1:-1:-1;;;648:37:58;;;;;:::o;532::61:-;;;;;;;;-1:-1:-1;;;;;532:37:61;;;;;;;;;;;;-1:-1:-1;;;532:37:61;;;;;-1:-1:-1;;;532:37:61;;;;;:::o;509:29:58:-;;;-1:-1:-1;;;;;509:29:58;;:::o;2456:850::-;2607:5;;;2589:45;;;-1:-1:-1;;;2589:45:58;;;;2547:12;;-1:-1:-1;;;;;2607:5:58;;;;2589:43;;:45;;;;;;;;;;;;;2607:5;2589:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2589:45:58;-1:-1:-1;;;;;2575:59:58;:10;:59;2567:113;;;;-1:-1:-1;;;2567:113:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2695:16:58;;;;;;;;2687:25;;;;;;2719:14;;-1:-1:-1;;;;;2753:15:58;;;;;;;:53;;2791:6;2799;2753:53;;;2772:6;2780;2753:53;2718:88;;-1:-1:-1;2718:88:58;-1:-1:-1;;;;;;2820:20:58;;2812:29;;;;;;2867:25;;;2847:17;2867:25;;;:20;:25;;;;;;;;;;;2906:16;;;2898:25;;;;;;-1:-1:-1;;;;;2937:15:58;;;2977:1;2937:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;:28;;;;;;;;;;;;:42;2929:51;;;;;;2993:55;3008:4;3015:6;3023;3031:3;3036:11;2993:6;:55::i;:::-;-1:-1:-1;;;;;3054:15:58;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:28;;;;;;;;;;;;:35;;;;;-1:-1:-1;;;;;;3054:35:58;;;;;;;;3204:15;;;;;;;;;:23;;;;;;;;:28;;;;;;;;;:35;;;;;;;;;;3250:51;;;;;;;;;;;;;;;;;3054:35;;-1:-1:-1;3054:28:58;;3250:51;;;;;;;;;;2456:850;;;;;;;;:::o;825:61::-;;;;;;;;;;;;;;;;;;;;;;:::o;1272:1145::-;1385:1;1367:6;-1:-1:-1;;;;;1367:6:58;:20;1359:69;;;;-1:-1:-1;;;1359:69:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1443:21:58;;1435:65;;;;;-1:-1:-1;;;1435:65:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1514:20:58;;1506:63;;;;;-1:-1:-1;;;1506:63:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1583:23:58;;1575:69;;;;-1:-1:-1;;;1575:69:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1738:6;:16;;-1:-1:-1;;;;;1738:16:58;;;-1:-1:-1;;;;;;1738:16:58;;;;;;1803:5;:14;;;;;;;;;;;1824:8;:20;;;;;;;;;;;;;;1855:38;;1824:20;;1738:6;1855:38;;1738:6;;1855:38;2034:31;2051:3;2056:1;2059;2062:2;2034:16;:31::i;:::-;2204:33;2221:4;2227:2;2231:1;2234:2;2204:16;:33::i;:::-;2375:37;2392:5;2399:3;2404:2;2408:3;2375:16;:37::i;:::-;1272:1145;;;:::o;3310:221::-;1125:13;:11;:13::i;:::-;-1:-1:-1;;;;;3392:23:58;::::1;3384:69;;;;-1:-1:-1::0;;;3384:69:58::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3480:8;::::0;3464:36:::1;::::0;-1:-1:-1;;;;;3464:36:58;;::::1;::::0;3480:8:::1;::::0;3464:36:::1;::::0;3480:8:::1;::::0;3464:36:::1;3506:8;:20:::0;;-1:-1:-1;;;;;;3506:20:58::1;-1:-1:-1::0;;;;;3506:20:58;;;::::1;::::0;;;::::1;::::0;;3310:221::o;1154:114::-;1213:5;;-1:-1:-1;;;;;1213:5:58;1222:10;1213:19;1205:58;;;;;-1:-1:-1;;;1205:58:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;1154:114::o;4561:307::-;4676:25;;;;;;;;:20;:25;;;;;;;;:39;;-1:-1:-1;;4676:39:58;;;;;;;;;;;4746:40;;;;;;;;;;;;;;;;;;;;;;;4721:22;;;:17;:22;;;;;;:65;;;;;;-1:-1:-1;;4721:65:58;;;;;;;-1:-1:-1;;4721:65:58;4676:39;4721:65;;;;;;;;;;;;;;;4797:66;;;;;;;;;;;;;;;;;;;;;;;;;4561:307;;;;:::o;1095:492:61:-;1252:100;;;;;;;;-1:-1:-1;;;;;1252:100:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1239:113:61;;-1:-1:-1;;;;;;1239:113:61;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1239:113:61;-1:-1:-1;;;1239:113:61;;;;;;;-1:-1:-1;;;;1239:113:61;-1:-1:-1;;;1239:113:61;;;;;;;;;;;;;;;;-1:-1:-1;1416:6:61;;1386:60;;-1:-1:-1;;;1386:60:61;;;;-1:-1:-1;;;;1416:6:61;;;;;1386:58;;:60;;;;;-1:-1:-1;;1386:60:61;;;;;;;;1416:6;1386:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1386:60:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1386:60:61;;;;;;;;;;-1:-1:-1;1386:60:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1386:60:61;;;;-1:-1:-1;;;;;1477:31:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1467:42;;;;;1358:88;;-1:-1:-1;1522:37:61;;-1:-1:-1;;;;1467:42:61;;-1:-1:-1;1358:88:61;1522:14;:37::i;:::-;1572:10;1565:17;;-1:-1:-1;;;;;;1565:17:61;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1565:17:61;;;1515:44;;-1:-1:-1;;;;;;;;1095:492:61:o;1013:535:47:-;1100:7;1119:12;1174:6;1149:21;:31;;1141:73;;;;;-1:-1:-1;;;1141:73:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:15;;1224:65;;;;;-1:-1:-1;;;1224:65:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:4;1429:8;1423:15;1416:4;1406:8;1402:19;1394:6;1386:59;1378:67;-1:-1:-1;;;;;;1472:18:47;;1464:56;;;;;-1:-1:-1;;;1464:56:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:4;1013:535;-1:-1:-1;;;;1013:535:47:o","linkReferences":{}},"methodIdentifiers":{"beacon()":"59659e90","createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24,uint8,uint8)":"27c28660","feeAmountProtocol(uint24)":"b4a91cbd","feeAmountTickSpacing(uint24)":"22afcccb","flashLoanEnabled()":"65d61c6c","getPool(address,address,uint24)":"1698ee82","initialize(address,address,address)":"c0c53b8b","owner()":"8da5cb5b","parameters()":"89035730","setTreasury(address)":"f0f44260","toggleFlashLoanPermission()":"4cad9140","treasury()":"61d027b3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"protocolFeeNum\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"protocolFeeDen\",\"type\":\"uint8\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"FlashLoanPermissionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocolNum\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocolDen\",\"type\":\"uint8\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"feeAmountProtocol\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"numerator\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"denominator\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashLoanEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasury_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleFlashLoanPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24,uint8,uint8)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"feeProtocolDen\":\"The denominator of the protocol fee as a ratio of the fee amount\",\"feeProtocolNum\":\"The numerator of the protocol fee as a ratio of the fee amount\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"setTreasury(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_treasury\":\"The new treasury address\"}},\"toggleFlashLoanPermission()\":{\"details\":\"Must be called by the current owner\"}},\"stateVariables\":{\"feeAmountProtocol\":{\"details\":\"This protocol fee can be changed by the factory owner in each pool later\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee return numerator The numerator of the protocol fee as a ratio of the fee amount return denominator The denominator of the protocol fee as a ratio of the fee amount\"}},\"feeAmountTickSpacing\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"return\":\"The tick spacing\"},\"flashLoanEnabled\":{\"details\":\"Can be changed by the current owner via toggleFlashLoanPermission\",\"return\":\"Whether flash loans are enabled\"},\"getPool\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"return\":\"pool The pool address\"},\"owner\":{\"details\":\"Can be changed by the current owner via setOwner\",\"return\":\"The address of the factory owner\"},\"treasury\":{\"details\":\"Can be changed by the current owner via setTreasury\",\"return\":\"The address of the treasury\"}},\"title\":\"Canonical Katana V3 factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24,uint8,uint8)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"FlashLoanPermissionUpdated(bool)\":{\"notice\":\"Emitted when the ability to call the `flash` function on KatanaV3Pool is toggled\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"},\"TreasuryChanged(address,address)\":{\"notice\":\"Emitted when the treasury address is changed\"}},\"kind\":\"user\",\"methods\":{\"beacon()\":{\"notice\":\"Returns the address of the beacon that pool proxies must be deployed with\"},\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24,uint8,uint8)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountProtocol(uint24)\":{\"notice\":\"Returns the default protocol fee ratio for a given fee amount, if enabled, or 0 if not enabled\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"flashLoanEnabled()\":{\"notice\":\"Returns whether flash loans are enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"parameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"},\"setTreasury(address)\":{\"notice\":\"Updates the treasury address\"},\"toggleFlashLoanPermission()\":{\"notice\":\"Toggles the ability to call the `flash` function on KatanaV3Pool\"},\"treasury()\":{\"notice\":\"Returns the treasury address that receives protocol fees\"}},\"notice\":\"Deploys Katana V3 pools and manages ownership and control over pool protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/KatanaV3Factory.sol\":\"KatanaV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/lib/contracts/=lib/solidity-lib/contracts/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solidity-lib/=lib/solidity-lib/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address) {\\n        address addr;\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n        return addr;\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address) {\\n        bytes32 _data = keccak256(\\n            abi.encodePacked(bytes1(0xff), deployer, salt, bytecodeHash)\\n        );\\n        return address(uint160(uint256(_data)));\\n    }\\n}\\n\",\"keccak256\":\"0xb38f9c235d4beb58d586546f93e39b424f97f931170827f46005c788e44a60c1\",\"license\":\"MIT\"},\"src/core/KatanaV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity =0.7.6;\\n\\nimport \\\"./interfaces/IKatanaV3Factory.sol\\\";\\n\\nimport \\\"./KatanaV3PoolDeployer.sol\\\";\\n\\nimport \\\"../external/interfaces/IKatanaGovernance.sol\\\";\\n\\n/// @title Canonical Katana V3 factory\\n/// @notice Deploys Katana V3 pools and manages ownership and control over pool protocol fees\\ncontract KatanaV3Factory is IKatanaV3Factory, KatanaV3PoolDeployer {\\n  struct Fraction {\\n    uint8 numerator;\\n    uint8 denominator;\\n  }\\n\\n  /// @inheritdoc IKatanaV3Factory\\n  address public override owner;\\n  /// @inheritdoc IKatanaV3Factory\\n  address public override treasury;\\n  /// @inheritdoc IKatanaV3Factory\\n  bool public override flashLoanEnabled;\\n\\n  /// @inheritdoc IKatanaV3Factory\\n  mapping(uint24 => int24) public override feeAmountTickSpacing;\\n  /// @inheritdoc IKatanaV3Factory\\n  mapping(uint24 => Fraction) public override feeAmountProtocol;\\n  /// @inheritdoc IKatanaV3Factory\\n  mapping(address => mapping(address => mapping(uint24 => address))) public override getPool;\\n\\n  constructor() {\\n    // disable initialization\\n    beacon = address(1);\\n  }\\n\\n  modifier onlyOwner() {\\n    _checkOwner();\\n    _;\\n  }\\n\\n  function _checkOwner() internal view virtual {\\n    require(owner == msg.sender, \\\"KatanaV3Factory: FORBIDDEN\\\");\\n  }\\n\\n  function initialize(address beacon_, address owner_, address treasury_) external {\\n    require(beacon == address(0), \\\"KatanaV3Factory: ALREADY_INITIALIZED\\\");\\n\\n    require(beacon_ != address(0), \\\"KatanaV3Factory: INVALID_BEACON\\\");\\n    require(owner_ != address(0), \\\"KatanaV3Factory: INVALID_OWNER\\\");\\n    require(treasury_ != address(0), \\\"KatanaV3Factory: INVALID_TREASURY\\\");\\n\\n    // this beacon is treated as immutable\\n    // so there is no need to emit an event\\n    beacon = beacon_;\\n\\n    // owner is also treated as immutable\\n    owner = owner_;\\n\\n    treasury = treasury_;\\n    emit TreasuryChanged(address(0), treasury_);\\n\\n    // swap fee 0.01% = 0.005% for LP + 0.005% for protocol\\n    // tick spacing of 1, equivalent to 0.01% between initializable ticks\\n    _enableFeeAmount(100, 1, 5, 10);\\n\\n    // swap fee 0.3% = 0.25% for LP + 0.05% for protocol\\n    // tick spacing of 60, approximately 0.60% between initializable ticks\\n    _enableFeeAmount(3000, 60, 5, 30);\\n\\n    // swap fee 1% = 0.85% for LP + 0.15% for protocol\\n    // tick spacing of 200, approximately 2.02% between initializable ticks\\n    _enableFeeAmount(10000, 200, 15, 100);\\n  }\\n\\n  /// @inheritdoc IKatanaV3Factory\\n  function createPool(address tokenA, address tokenB, uint24 fee) external override returns (address pool) {\\n    require(msg.sender == IKatanaGovernance(owner).getPositionManager(), \\\"KatanaV3Factory: INVALID_POSITION_MANAGER\\\");\\n\\n    require(tokenA != tokenB);\\n    (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\\n    require(token0 != address(0));\\n    int24 tickSpacing = feeAmountTickSpacing[fee];\\n    require(tickSpacing != 0);\\n    require(getPool[token0][token1][fee] == address(0));\\n    pool = deploy(address(this), token0, token1, fee, tickSpacing);\\n    getPool[token0][token1][fee] = pool;\\n    // populate mapping in the reverse direction, deliberate choice to avoid the cost of comparing addresses\\n    getPool[token1][token0][fee] = pool;\\n    emit PoolCreated(token0, token1, fee, tickSpacing, pool);\\n  }\\n\\n  function setTreasury(address _treasury) external override onlyOwner {\\n    require(_treasury != address(0), \\\"KatanaV3Factory: INVALID_TREASURY\\\");\\n    emit TreasuryChanged(treasury, _treasury);\\n    treasury = _treasury;\\n  }\\n\\n  function toggleFlashLoanPermission() external override onlyOwner {\\n    flashLoanEnabled = !flashLoanEnabled;\\n    emit FlashLoanPermissionUpdated(flashLoanEnabled);\\n  }\\n\\n  /// @inheritdoc IKatanaV3Factory\\n  function enableFeeAmount(uint24 fee, int24 tickSpacing, uint8 feeProtocolNum, uint8 feeProtocolDen)\\n    public\\n    override\\n    onlyOwner\\n  {\\n    require(fee < 1000000, \\\"KatanaV3Factory: FEE_TOO_HIGH\\\");\\n    // tick spacing is capped at 16384 to prevent the situation where tickSpacing is so large that\\n    // TickBitmap#nextInitializedTickWithinOneWord overflows int24 container from a valid tick\\n    // 16384 ticks represents a >5x price change with ticks of 1 bips\\n    require(tickSpacing > 0 && tickSpacing < 16384, \\\"KatanaV3Factory: INVALID_TICK_SPACING\\\");\\n    require(feeProtocolNum < feeProtocolDen, \\\"KatanaV3Factory: INVALID_FEE_PROTOCOL\\\");\\n    require(feeAmountTickSpacing[fee] == 0, \\\"KatanaV3Factory: FEE_AMOUNT_ALREADY_ENABLED\\\");\\n\\n    _enableFeeAmount(fee, tickSpacing, feeProtocolNum, feeProtocolDen);\\n  }\\n\\n  function _enableFeeAmount(uint24 fee, int24 tickSpacing, uint8 feeProtocolNum, uint8 feeProtocolDen) private {\\n    feeAmountTickSpacing[fee] = tickSpacing;\\n    feeAmountProtocol[fee] = Fraction(feeProtocolNum, feeProtocolDen);\\n    emit FeeAmountEnabled(fee, tickSpacing, feeProtocolNum, feeProtocolDen);\\n  }\\n}\\n\",\"keccak256\":\"0x78fb2b1deaf8ce0380317525d5143bd6872476a7756106c2b567533bb74098b7\",\"license\":\"BUSL-1.1\"},\"src/core/KatanaV3PoolDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity =0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Create2.sol\\\";\\n\\nimport \\\"./interfaces/IKatanaV3PoolDeployer.sol\\\";\\nimport \\\"./interfaces/IKatanaV3PoolBeaconImmutables.sol\\\";\\n\\nabstract contract KatanaV3PoolDeployer is IKatanaV3PoolDeployer {\\n  /// @inheritdoc IKatanaV3PoolDeployer\\n  address public override beacon;\\n\\n  struct Parameters {\\n    address factory;\\n    address token0;\\n    address token1;\\n    uint24 fee;\\n    int24 tickSpacing;\\n  }\\n\\n  /// @inheritdoc IKatanaV3PoolDeployer\\n  Parameters public override parameters;\\n\\n  /// @dev Deploys a pool with the given parameters by transiently setting the parameters storage slot and then\\n  /// clearing it after deploying the pool.\\n  /// @param factory The contract address of the Katana V3 factory\\n  /// @param token0 The first token of the pool by address sort order\\n  /// @param token1 The second token of the pool by address sort order\\n  /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n  /// @param tickSpacing The spacing between usable ticks\\n  function deploy(address factory, address token0, address token1, uint24 fee, int24 tickSpacing)\\n    internal\\n    returns (address pool)\\n  {\\n    parameters = Parameters({ factory: factory, token0: token0, token1: token1, fee: fee, tickSpacing: tickSpacing });\\n    bytes memory creationCode = IKatanaV3PoolBeaconImmutables(beacon).POOL_PROXY_INIT_CODE();\\n    bytes32 salt = keccak256(abi.encode(token0, token1, fee));\\n    pool = Create2.deploy(0, salt, creationCode);\\n    delete parameters;\\n  }\\n}\\n\",\"keccak256\":\"0x5425015ac5d21392b397d563b65592055ccdec92e0b2e5b771ff80680c6227be\",\"license\":\"BUSL-1.1\"},\"src/core/interfaces/IKatanaV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Katana V3 Factory\\n/// @notice The Katana V3 Factory facilitates creation of Katana V3 pools and control over the protocol fees\\ninterface IKatanaV3Factory {\\n  /// @notice Emitted when the treasury address is changed\\n  /// @param oldTreasury The treasury address before the treasury was changed\\n  /// @param newTreasury The treasury address after the treasury was changed\\n  event TreasuryChanged(address indexed oldTreasury, address indexed newTreasury);\\n\\n  /// @notice Emitted when the ability to call the `flash` function on KatanaV3Pool is toggled\\n  /// @param enabled Whether flash loans are enabled\\n  event FlashLoanPermissionUpdated(bool indexed enabled);\\n\\n  /// @notice Emitted when a pool is created\\n  /// @param token0 The first token of the pool by address sort order\\n  /// @param token1 The second token of the pool by address sort order\\n  /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n  /// @param tickSpacing The minimum number of ticks between initialized ticks\\n  /// @param pool The address of the created pool\\n  event PoolCreated(\\n    address indexed token0, address indexed token1, uint24 indexed fee, int24 tickSpacing, address pool\\n  );\\n\\n  /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n  /// @param fee The enabled fee, denominated in hundredths of a bip\\n  /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n  /// @param protocolFeeNum The numerator of the protocol fee as a ratio of the fee amount that sent to the treasury\\n  /// @param protocolFeeDen The denominator of the protocol fee as a ratio of the fee amount that sent to the treasury\\n  event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing, uint8 protocolFeeNum, uint8 protocolFeeDen);\\n\\n  /// @notice Returns the current owner of the factory\\n  /// @dev Can be changed by the current owner via setOwner\\n  /// @return The address of the factory owner\\n  function owner() external view returns (address);\\n\\n  /// @notice Returns the treasury address that receives protocol fees\\n  /// @dev Can be changed by the current owner via setTreasury\\n  /// @return The address of the treasury\\n  function treasury() external view returns (address);\\n\\n  /// @notice Returns whether flash loans are enabled\\n  /// @dev Can be changed by the current owner via toggleFlashLoanPermission\\n  /// @return Whether flash loans are enabled\\n  function flashLoanEnabled() external view returns (bool);\\n\\n  /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n  /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n  /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n  /// @return The tick spacing\\n  function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n  /// @notice Returns the default protocol fee ratio for a given fee amount, if enabled, or 0 if not enabled\\n  /// @dev This protocol fee can be changed by the factory owner in each pool later\\n  /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n  /// return numerator The numerator of the protocol fee as a ratio of the fee amount\\n  /// return denominator The denominator of the protocol fee as a ratio of the fee amount\\n  function feeAmountProtocol(uint24 fee) external view returns (uint8 numerator, uint8 denominator);\\n\\n  /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n  /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n  /// @param tokenA The contract address of either token0 or token1\\n  /// @param tokenB The contract address of the other token\\n  /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n  /// @return pool The pool address\\n  function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address pool);\\n\\n  /// @notice Creates a pool for the given two tokens and fee\\n  /// @param tokenA One of the two tokens in the desired pool\\n  /// @param tokenB The other of the two tokens in the desired pool\\n  /// @param fee The desired fee for the pool\\n  /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n  /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n  /// are invalid.\\n  /// @return pool The address of the newly created pool\\n  function createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool);\\n\\n  /// @notice Updates the treasury address\\n  /// @dev Must be called by the current owner\\n  /// @param _treasury The new treasury address\\n  function setTreasury(address _treasury) external;\\n\\n  /// @notice Toggles the ability to call the `flash` function on KatanaV3Pool\\n  /// @dev Must be called by the current owner\\n  function toggleFlashLoanPermission() external;\\n\\n  /// @notice Enables a fee amount with the given tickSpacing\\n  /// @dev Fee amounts may never be removed once enabled\\n  /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n  /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n  /// @param feeProtocolNum The numerator of the protocol fee as a ratio of the fee amount\\n  /// @param feeProtocolDen The denominator of the protocol fee as a ratio of the fee amount\\n  function enableFeeAmount(uint24 fee, int24 tickSpacing, uint8 feeProtocolNum, uint8 feeProtocolDen) external;\\n}\\n\",\"keccak256\":\"0x74057d6aa0f037c5c7239b089589ca4db7e63972dba9fbb05000bbbfb200c3c4\",\"license\":\"GPL-2.0-or-later\"},\"src/core/interfaces/IKatanaV3PoolBeaconImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Katana V3 Factory immutables\\ninterface IKatanaV3PoolBeaconImmutables {\\n  /// @dev The init code for the pool proxy\\n  function POOL_PROXY_INIT_CODE() external view returns (bytes memory);\\n\\n  /// @dev The init code hash for the pool proxy\\n  function POOL_PROXY_INIT_CODE_HASH() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x88b28dc7dc302510347f0e50398bf7a0c5d77f528bf95d8d2d7e7eeb5753b9dd\",\"license\":\"GPL-2.0-or-later\"},\"src/core/interfaces/IKatanaV3PoolDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title An interface for a contract that is capable of deploying Katana V3 Pools\\n/// @notice A contract that constructs a pool must implement this to pass arguments to the pool\\n/// @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\\n/// of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain\\ninterface IKatanaV3PoolDeployer {\\n  /// @notice Returns the address of the beacon that pool proxies must be deployed with\\n  /// @dev This value MUST be immutable after initialization\\n  function beacon() external view returns (address);\\n\\n  /// @notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\\n  /// @dev Called by the pool constructor to fetch the parameters of the pool\\n  /// Returns factory The factory address\\n  /// Returns token0 The first token of the pool by address sort order\\n  /// Returns token1 The second token of the pool by address sort order\\n  /// Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n  /// Returns tickSpacing The minimum number of ticks between initialized ticks\\n  function parameters()\\n    external\\n    view\\n    returns (address factory, address token0, address token1, uint24 fee, int24 tickSpacing);\\n}\\n\",\"keccak256\":\"0x05ea96409d709121a2e5ff86949eecfbd864678791c1c5b4404e829c3883d2c4\",\"license\":\"GPL-2.0-or-later\"},\"src/external/interfaces/IKatanaGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.17 <0.9.0;\\npragma abicoder v2;\\n\\ninterface IKatanaGovernance {\\n  struct Permission {\\n    // The timestamp until the whitelist is ended.\\n    // 0 means the whitelist is disabled.\\n    uint40 whitelistUntil;\\n    // The mapping of the allowed addresses in the whitelist stage.\\n    mapping(address => bool) allowed;\\n  }\\n\\n  /// @dev Emitted when the router address is updated.\\n  event RouterUpdated(address indexed by, address indexed oldRouter, address indexed newRouter);\\n  /// @dev Emitted when the factory address is updated.\\n  event FactoryUpdated(address indexed by, address factory);\\n  /// @dev Emitted when the permission of a token is updated.\\n  event PermissionUpdated(\\n    address indexed by, address indexed token, uint40 whitelistUntil, address[] allowed, bool[] statuses\\n  );\\n  /// @dev Emitted when allowed actor list is updated.\\n  event AllowedActorUpdated(address indexed actor, bool allowed);\\n\\n  /**\\n   * @dev Sets the router address.\\n   *\\n   * - Requirements: Caller must be the owner.\\n   *\\n   * @param router The address of the router.\\n   */\\n  function setRouter(address router) external;\\n\\n  /**\\n   * @dev Sets an address is allowed/disallowed to skip authorization checks.\\n   * To check if an address is allowed, see `isAllowedActor` function.\\n   *\\n   * - Requirements: Caller must be the owner.\\n   *\\n   * @param actor The address to be allowed/disallowed.\\n   * @param allowed True if the address is allowed, otherwise false.\\n   */\\n  function setAllowedActor(address actor, bool allowed) external;\\n\\n  /**\\n   * @notice Toggles the ability to call the `flash` function on KatanaV3Pool\\n   *\\n   * - Requirements: Caller must be the owner.\\n   */\\n  function toggleFlashLoanPermission() external;\\n\\n  /**\\n   * @notice Enables a fee amount with the given tickSpacing for KatanaV3Factory\\n   * @dev Fee amounts may never be removed once enabled. Caller must be the owner.\\n   *\\n   * @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n   * @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n   * @param feeProtocolNum The numerator of the protocol fee as a ratio of the fee amount\\n   * @param feeProtocolDen The denominator of the protocol fee as a ratio of the fee amount\\n   */\\n  function enableFeeAmount(uint24 fee, int24 tickSpacing, uint8 feeProtocolNum, uint8 feeProtocolDen) external;\\n\\n  /**\\n   * @dev Sets the permission of a token.\\n   *\\n   * - Requirements: Caller must be the owner.\\n   *\\n   * @param token The address of the token.\\n   * @param whitelistUntil The end of the whitelist duration in seconds.\\n   * @param alloweds The addresses to be allowed.\\n   * @param statuses The statuses of the addresses.\\n   */\\n  function setPermission(address token, uint40 whitelistUntil, address[] calldata alloweds, bool[] calldata statuses)\\n    external;\\n\\n  /**\\n   * @dev Creates a pair of tokens and sets the permission.\\n   *\\n   * - Requirements: Caller must be the owner.\\n   *\\n   * @param tokenA The address of the first token.\\n   * @param tokenB The address of the second token.\\n   * @param whitelistUntil The end of the whitelist duration in seconds.\\n   * @param alloweds The addresses to be allowed.\\n   * @param statuses The whitelist statuses of the addresses.\\n   * @return pair The address of the pair.\\n   */\\n  function createPairAndSetPermission(\\n    address tokenA,\\n    address tokenB,\\n    uint40 whitelistUntil,\\n    address[] calldata alloweds,\\n    bool[] calldata statuses\\n  ) external returns (address pair);\\n\\n  /**\\n   * @notice Gets the current router address.\\n   */\\n  function getRouter() external view returns (address);\\n\\n  /**\\n   * @notice Gets the Katana V3 nonfungible position manager address.\\n   */\\n  function getPositionManager() external view returns (address);\\n\\n  /**\\n   * @notice Whether the account is always skipped from authorization checks.\\n   * @dev See `isAuthorized` function.\\n   */\\n  function isAllowedActor(address account) external view returns (bool);\\n\\n  /**\\n   * @notice Checks if an account is authorized to interact with a token.\\n   *\\n   * @param token The address of the token.\\n   * @param account The address of the account.\\n   * @return True if the account is authorized, otherwise false.\\n   */\\n  function isAuthorized(address token, address account) external view returns (bool);\\n\\n  /**\\n   * @notice Gets the Katana V3 factory address.\\n   */\\n  function getV3Factory() external view returns (address);\\n\\n  /**\\n   * @dev Gets the Katana V2 factory address.\\n   */\\n  function getV2Factory() external view returns (address);\\n\\n  /**\\n   * @notice Gets the whitelist duration of a token.\\n   *\\n   * @param token The address of the token.\\n   * @return The whitelist duration.\\n   */\\n  function getWhitelistUntil(address token) external view returns (uint40);\\n\\n  /**\\n   * @notice Gets the whitelist information of many tokens.\\n   *\\n   * @return tokens The addresses of the tokens.\\n   * @return whitelistUntils The array of whitelist until timestamps.\\n   */\\n  function getManyTokensWhitelistInfo()\\n    external\\n    view\\n    returns (address[] memory tokens, uint40[] memory whitelistUntils);\\n\\n  /**\\n   * @notice Gets all whitelisted tokens for given account.\\n   *\\n   * @param account The address of the account.\\n   * @return tokens The addresses of the tokens.\\n   * @return whitelistUntils The array of whitelist until timestamps.\\n   */\\n  function getWhitelistedTokensFor(address account)\\n    external\\n    view\\n    returns (address[] memory tokens, uint40[] memory whitelistUntils);\\n\\n  /**\\n   * @notice Checks if an account is authorized to interact with a path tokens.\\n   *\\n   * @param tokens The path to swap on.\\n   * @param account The address of the account.\\n   * @return False if exists one token that the account is not authorized, otherwise true.\\n   */\\n  function isAuthorized(address[] calldata tokens, address account) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5b6c2fc92f18859423f39d37a4399b08dc278d344c4bcad1d22e2a3257cf2d8b\",\"license\":\"MIT\"}},\"version\":1}","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24","indexed":true},{"internalType":"int24","name":"tickSpacing","type":"int24","indexed":true},{"internalType":"uint8","name":"protocolFeeNum","type":"uint8","indexed":false},{"internalType":"uint8","name":"protocolFeeDen","type":"uint8","indexed":false}],"type":"event","name":"FeeAmountEnabled","anonymous":false},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool","indexed":true}],"type":"event","name":"FlashLoanPermissionUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"token0","type":"address","indexed":true},{"internalType":"address","name":"token1","type":"address","indexed":true},{"internalType":"uint24","name":"fee","type":"uint24","indexed":true},{"internalType":"int24","name":"tickSpacing","type":"int24","indexed":false},{"internalType":"address","name":"pool","type":"address","indexed":false}],"type":"event","name":"PoolCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"oldTreasury","type":"address","indexed":true},{"internalType":"address","name":"newTreasury","type":"address","indexed":true}],"type":"event","name":"TreasuryChanged","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"beacon","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"nonpayable","type":"function","name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"uint8","name":"feeProtocolNum","type":"uint8"},{"internalType":"uint8","name":"feeProtocolDen","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"enableFeeAmount"},{"inputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function","name":"feeAmountProtocol","outputs":[{"internalType":"uint8","name":"numerator","type":"uint8"},{"internalType":"uint8","name":"denominator","type":"uint8"}]},{"inputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function","name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"flashLoanEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function","name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"beacon_","type":"address"},{"internalType":"address","name":"owner_","type":"address"},{"internalType":"address","name":"treasury_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"parameters","outputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}]},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setTreasury"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"toggleFlashLoanPermission"},{"inputs":[],"stateMutability":"view","type":"function","name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"enableFeeAmount(uint24,int24,uint8,uint8)":{"details":"Fee amounts may never be removed once enabled","params":{"fee":"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)","feeProtocolDen":"The denominator of the protocol fee as a ratio of the fee amount","feeProtocolNum":"The numerator of the protocol fee as a ratio of the fee amount","tickSpacing":"The spacing between ticks to be enforced for all pools created with the given fee amount"}},"setTreasury(address)":{"details":"Must be called by the current owner","params":{"_treasury":"The new treasury address"}},"toggleFlashLoanPermission()":{"details":"Must be called by the current owner"}},"version":1},"userdoc":{"kind":"user","methods":{"beacon()":{"notice":"Returns the address of the beacon that pool proxies must be deployed with"},"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24,uint8,uint8)":{"notice":"Enables a fee amount with the given tickSpacing"},"feeAmountProtocol(uint24)":{"notice":"Returns the default protocol fee ratio for a given fee amount, if enabled, or 0 if not enabled"},"feeAmountTickSpacing(uint24)":{"notice":"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"flashLoanEnabled()":{"notice":"Returns whether flash loans are enabled"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{"notice":"Returns the current owner of the factory"},"parameters()":{"notice":"Get the parameters to be used in constructing the pool, set transiently during pool creation."},"setTreasury(address)":{"notice":"Updates the treasury address"},"toggleFlashLoanPermission()":{"notice":"Toggles the ability to call the `flash` function on KatanaV3Pool"},"treasury()":{"notice":"Returns the treasury address that receives protocol fees"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/lib/contracts/=lib/solidity-lib/contracts/","base64-sol/=lib/base64/","base64/=lib/base64/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","solidity-lib/=lib/solidity-lib/contracts/"],"optimizer":{"enabled":true,"runs":250},"metadata":{"useLiteralContent":true,"bytecodeHash":"ipfs"},"compilationTarget":{"src/core/KatanaV3Factory.sol":"KatanaV3Factory"},"evmVersion":"istanbul","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Create2.sol":{"keccak256":"0xb38f9c235d4beb58d586546f93e39b424f97f931170827f46005c788e44a60c1","urls":[],"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address) {\n        address addr;\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"Create2: Failed on deploy\");\n        return addr;\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address) {\n        bytes32 _data = keccak256(\n            abi.encodePacked(bytes1(0xff), deployer, salt, bytecodeHash)\n        );\n        return address(uint160(uint256(_data)));\n    }\n}\n","license":"MIT"},"src/core/KatanaV3Factory.sol":{"keccak256":"0x78fb2b1deaf8ce0380317525d5143bd6872476a7756106c2b567533bb74098b7","urls":[],"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity =0.7.6;\n\nimport \"./interfaces/IKatanaV3Factory.sol\";\n\nimport \"./KatanaV3PoolDeployer.sol\";\n\nimport \"../external/interfaces/IKatanaGovernance.sol\";\n\n/// @title Canonical Katana V3 factory\n/// @notice Deploys Katana V3 pools and manages ownership and control over pool protocol fees\ncontract KatanaV3Factory is IKatanaV3Factory, KatanaV3PoolDeployer {\n  struct Fraction {\n    uint8 numerator;\n    uint8 denominator;\n  }\n\n  /// @inheritdoc IKatanaV3Factory\n  address public override owner;\n  /// @inheritdoc IKatanaV3Factory\n  address public override treasury;\n  /// @inheritdoc IKatanaV3Factory\n  bool public override flashLoanEnabled;\n\n  /// @inheritdoc IKatanaV3Factory\n  mapping(uint24 => int24) public override feeAmountTickSpacing;\n  /// @inheritdoc IKatanaV3Factory\n  mapping(uint24 => Fraction) public override feeAmountProtocol;\n  /// @inheritdoc IKatanaV3Factory\n  mapping(address => mapping(address => mapping(uint24 => address))) public override getPool;\n\n  constructor() {\n    // disable initialization\n    beacon = address(1);\n  }\n\n  modifier onlyOwner() {\n    _checkOwner();\n    _;\n  }\n\n  function _checkOwner() internal view virtual {\n    require(owner == msg.sender, \"KatanaV3Factory: FORBIDDEN\");\n  }\n\n  function initialize(address beacon_, address owner_, address treasury_) external {\n    require(beacon == address(0), \"KatanaV3Factory: ALREADY_INITIALIZED\");\n\n    require(beacon_ != address(0), \"KatanaV3Factory: INVALID_BEACON\");\n    require(owner_ != address(0), \"KatanaV3Factory: INVALID_OWNER\");\n    require(treasury_ != address(0), \"KatanaV3Factory: INVALID_TREASURY\");\n\n    // this beacon is treated as immutable\n    // so there is no need to emit an event\n    beacon = beacon_;\n\n    // owner is also treated as immutable\n    owner = owner_;\n\n    treasury = treasury_;\n    emit TreasuryChanged(address(0), treasury_);\n\n    // swap fee 0.01% = 0.005% for LP + 0.005% for protocol\n    // tick spacing of 1, equivalent to 0.01% between initializable ticks\n    _enableFeeAmount(100, 1, 5, 10);\n\n    // swap fee 0.3% = 0.25% for LP + 0.05% for protocol\n    // tick spacing of 60, approximately 0.60% between initializable ticks\n    _enableFeeAmount(3000, 60, 5, 30);\n\n    // swap fee 1% = 0.85% for LP + 0.15% for protocol\n    // tick spacing of 200, approximately 2.02% between initializable ticks\n    _enableFeeAmount(10000, 200, 15, 100);\n  }\n\n  /// @inheritdoc IKatanaV3Factory\n  function createPool(address tokenA, address tokenB, uint24 fee) external override returns (address pool) {\n    require(msg.sender == IKatanaGovernance(owner).getPositionManager(), \"KatanaV3Factory: INVALID_POSITION_MANAGER\");\n\n    require(tokenA != tokenB);\n    (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n    require(token0 != address(0));\n    int24 tickSpacing = feeAmountTickSpacing[fee];\n    require(tickSpacing != 0);\n    require(getPool[token0][token1][fee] == address(0));\n    pool = deploy(address(this), token0, token1, fee, tickSpacing);\n    getPool[token0][token1][fee] = pool;\n    // populate mapping in the reverse direction, deliberate choice to avoid the cost of comparing addresses\n    getPool[token1][token0][fee] = pool;\n    emit PoolCreated(token0, token1, fee, tickSpacing, pool);\n  }\n\n  function setTreasury(address _treasury) external override onlyOwner {\n    require(_treasury != address(0), \"KatanaV3Factory: INVALID_TREASURY\");\n    emit TreasuryChanged(treasury, _treasury);\n    treasury = _treasury;\n  }\n\n  function toggleFlashLoanPermission() external override onlyOwner {\n    flashLoanEnabled = !flashLoanEnabled;\n    emit FlashLoanPermissionUpdated(flashLoanEnabled);\n  }\n\n  /// @inheritdoc IKatanaV3Factory\n  function enableFeeAmount(uint24 fee, int24 tickSpacing, uint8 feeProtocolNum, uint8 feeProtocolDen)\n    public\n    override\n    onlyOwner\n  {\n    require(fee < 1000000, \"KatanaV3Factory: FEE_TOO_HIGH\");\n    // tick spacing is capped at 16384 to prevent the situation where tickSpacing is so large that\n    // TickBitmap#nextInitializedTickWithinOneWord overflows int24 container from a valid tick\n    // 16384 ticks represents a >5x price change with ticks of 1 bips\n    require(tickSpacing > 0 && tickSpacing < 16384, \"KatanaV3Factory: INVALID_TICK_SPACING\");\n    require(feeProtocolNum < feeProtocolDen, \"KatanaV3Factory: INVALID_FEE_PROTOCOL\");\n    require(feeAmountTickSpacing[fee] == 0, \"KatanaV3Factory: FEE_AMOUNT_ALREADY_ENABLED\");\n\n    _enableFeeAmount(fee, tickSpacing, feeProtocolNum, feeProtocolDen);\n  }\n\n  function _enableFeeAmount(uint24 fee, int24 tickSpacing, uint8 feeProtocolNum, uint8 feeProtocolDen) private {\n    feeAmountTickSpacing[fee] = tickSpacing;\n    feeAmountProtocol[fee] = Fraction(feeProtocolNum, feeProtocolDen);\n    emit FeeAmountEnabled(fee, tickSpacing, feeProtocolNum, feeProtocolDen);\n  }\n}\n","license":"BUSL-1.1"},"src/core/KatanaV3PoolDeployer.sol":{"keccak256":"0x5425015ac5d21392b397d563b65592055ccdec92e0b2e5b771ff80680c6227be","urls":[],"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity =0.7.6;\n\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\n\nimport \"./interfaces/IKatanaV3PoolDeployer.sol\";\nimport \"./interfaces/IKatanaV3PoolBeaconImmutables.sol\";\n\nabstract contract KatanaV3PoolDeployer is IKatanaV3PoolDeployer {\n  /// @inheritdoc IKatanaV3PoolDeployer\n  address public override beacon;\n\n  struct Parameters {\n    address factory;\n    address token0;\n    address token1;\n    uint24 fee;\n    int24 tickSpacing;\n  }\n\n  /// @inheritdoc IKatanaV3PoolDeployer\n  Parameters public override parameters;\n\n  /// @dev Deploys a pool with the given parameters by transiently setting the parameters storage slot and then\n  /// clearing it after deploying the pool.\n  /// @param factory The contract address of the Katana V3 factory\n  /// @param token0 The first token of the pool by address sort order\n  /// @param token1 The second token of the pool by address sort order\n  /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n  /// @param tickSpacing The spacing between usable ticks\n  function deploy(address factory, address token0, address token1, uint24 fee, int24 tickSpacing)\n    internal\n    returns (address pool)\n  {\n    parameters = Parameters({ factory: factory, token0: token0, token1: token1, fee: fee, tickSpacing: tickSpacing });\n    bytes memory creationCode = IKatanaV3PoolBeaconImmutables(beacon).POOL_PROXY_INIT_CODE();\n    bytes32 salt = keccak256(abi.encode(token0, token1, fee));\n    pool = Create2.deploy(0, salt, creationCode);\n    delete parameters;\n  }\n}\n","license":"BUSL-1.1"},"src/core/interfaces/IKatanaV3Factory.sol":{"keccak256":"0x74057d6aa0f037c5c7239b089589ca4db7e63972dba9fbb05000bbbfb200c3c4","urls":[],"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Katana V3 Factory\n/// @notice The Katana V3 Factory facilitates creation of Katana V3 pools and control over the protocol fees\ninterface IKatanaV3Factory {\n  /// @notice Emitted when the treasury address is changed\n  /// @param oldTreasury The treasury address before the treasury was changed\n  /// @param newTreasury The treasury address after the treasury was changed\n  event TreasuryChanged(address indexed oldTreasury, address indexed newTreasury);\n\n  /// @notice Emitted when the ability to call the `flash` function on KatanaV3Pool is toggled\n  /// @param enabled Whether flash loans are enabled\n  event FlashLoanPermissionUpdated(bool indexed enabled);\n\n  /// @notice Emitted when a pool is created\n  /// @param token0 The first token of the pool by address sort order\n  /// @param token1 The second token of the pool by address sort order\n  /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n  /// @param tickSpacing The minimum number of ticks between initialized ticks\n  /// @param pool The address of the created pool\n  event PoolCreated(\n    address indexed token0, address indexed token1, uint24 indexed fee, int24 tickSpacing, address pool\n  );\n\n  /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n  /// @param fee The enabled fee, denominated in hundredths of a bip\n  /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n  /// @param protocolFeeNum The numerator of the protocol fee as a ratio of the fee amount that sent to the treasury\n  /// @param protocolFeeDen The denominator of the protocol fee as a ratio of the fee amount that sent to the treasury\n  event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing, uint8 protocolFeeNum, uint8 protocolFeeDen);\n\n  /// @notice Returns the current owner of the factory\n  /// @dev Can be changed by the current owner via setOwner\n  /// @return The address of the factory owner\n  function owner() external view returns (address);\n\n  /// @notice Returns the treasury address that receives protocol fees\n  /// @dev Can be changed by the current owner via setTreasury\n  /// @return The address of the treasury\n  function treasury() external view returns (address);\n\n  /// @notice Returns whether flash loans are enabled\n  /// @dev Can be changed by the current owner via toggleFlashLoanPermission\n  /// @return Whether flash loans are enabled\n  function flashLoanEnabled() external view returns (bool);\n\n  /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n  /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n  /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n  /// @return The tick spacing\n  function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n  /// @notice Returns the default protocol fee ratio for a given fee amount, if enabled, or 0 if not enabled\n  /// @dev This protocol fee can be changed by the factory owner in each pool later\n  /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n  /// return numerator The numerator of the protocol fee as a ratio of the fee amount\n  /// return denominator The denominator of the protocol fee as a ratio of the fee amount\n  function feeAmountProtocol(uint24 fee) external view returns (uint8 numerator, uint8 denominator);\n\n  /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n  /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n  /// @param tokenA The contract address of either token0 or token1\n  /// @param tokenB The contract address of the other token\n  /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n  /// @return pool The pool address\n  function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address pool);\n\n  /// @notice Creates a pool for the given two tokens and fee\n  /// @param tokenA One of the two tokens in the desired pool\n  /// @param tokenB The other of the two tokens in the desired pool\n  /// @param fee The desired fee for the pool\n  /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n  /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n  /// are invalid.\n  /// @return pool The address of the newly created pool\n  function createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool);\n\n  /// @notice Updates the treasury address\n  /// @dev Must be called by the current owner\n  /// @param _treasury The new treasury address\n  function setTreasury(address _treasury) external;\n\n  /// @notice Toggles the ability to call the `flash` function on KatanaV3Pool\n  /// @dev Must be called by the current owner\n  function toggleFlashLoanPermission() external;\n\n  /// @notice Enables a fee amount with the given tickSpacing\n  /// @dev Fee amounts may never be removed once enabled\n  /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n  /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n  /// @param feeProtocolNum The numerator of the protocol fee as a ratio of the fee amount\n  /// @param feeProtocolDen The denominator of the protocol fee as a ratio of the fee amount\n  function enableFeeAmount(uint24 fee, int24 tickSpacing, uint8 feeProtocolNum, uint8 feeProtocolDen) external;\n}\n","license":"GPL-2.0-or-later"},"src/core/interfaces/IKatanaV3PoolBeaconImmutables.sol":{"keccak256":"0x88b28dc7dc302510347f0e50398bf7a0c5d77f528bf95d8d2d7e7eeb5753b9dd","urls":[],"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Katana V3 Factory immutables\ninterface IKatanaV3PoolBeaconImmutables {\n  /// @dev The init code for the pool proxy\n  function POOL_PROXY_INIT_CODE() external view returns (bytes memory);\n\n  /// @dev The init code hash for the pool proxy\n  function POOL_PROXY_INIT_CODE_HASH() external view returns (bytes32);\n}\n","license":"GPL-2.0-or-later"},"src/core/interfaces/IKatanaV3PoolDeployer.sol":{"keccak256":"0x05ea96409d709121a2e5ff86949eecfbd864678791c1c5b4404e829c3883d2c4","urls":[],"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title An interface for a contract that is capable of deploying Katana V3 Pools\n/// @notice A contract that constructs a pool must implement this to pass arguments to the pool\n/// @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\n/// of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain\ninterface IKatanaV3PoolDeployer {\n  /// @notice Returns the address of the beacon that pool proxies must be deployed with\n  /// @dev This value MUST be immutable after initialization\n  function beacon() external view returns (address);\n\n  /// @notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\n  /// @dev Called by the pool constructor to fetch the parameters of the pool\n  /// Returns factory The factory address\n  /// Returns token0 The first token of the pool by address sort order\n  /// Returns token1 The second token of the pool by address sort order\n  /// Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n  /// Returns tickSpacing The minimum number of ticks between initialized ticks\n  function parameters()\n    external\n    view\n    returns (address factory, address token0, address token1, uint24 fee, int24 tickSpacing);\n}\n","license":"GPL-2.0-or-later"},"src/external/interfaces/IKatanaGovernance.sol":{"keccak256":"0x5b6c2fc92f18859423f39d37a4399b08dc278d344c4bcad1d22e2a3257cf2d8b","urls":[],"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.5.17 <0.9.0;\npragma abicoder v2;\n\ninterface IKatanaGovernance {\n  struct Permission {\n    // The timestamp until the whitelist is ended.\n    // 0 means the whitelist is disabled.\n    uint40 whitelistUntil;\n    // The mapping of the allowed addresses in the whitelist stage.\n    mapping(address => bool) allowed;\n  }\n\n  /// @dev Emitted when the router address is updated.\n  event RouterUpdated(address indexed by, address indexed oldRouter, address indexed newRouter);\n  /// @dev Emitted when the factory address is updated.\n  event FactoryUpdated(address indexed by, address factory);\n  /// @dev Emitted when the permission of a token is updated.\n  event PermissionUpdated(\n    address indexed by, address indexed token, uint40 whitelistUntil, address[] allowed, bool[] statuses\n  );\n  /// @dev Emitted when allowed actor list is updated.\n  event AllowedActorUpdated(address indexed actor, bool allowed);\n\n  /**\n   * @dev Sets the router address.\n   *\n   * - Requirements: Caller must be the owner.\n   *\n   * @param router The address of the router.\n   */\n  function setRouter(address router) external;\n\n  /**\n   * @dev Sets an address is allowed/disallowed to skip authorization checks.\n   * To check if an address is allowed, see `isAllowedActor` function.\n   *\n   * - Requirements: Caller must be the owner.\n   *\n   * @param actor The address to be allowed/disallowed.\n   * @param allowed True if the address is allowed, otherwise false.\n   */\n  function setAllowedActor(address actor, bool allowed) external;\n\n  /**\n   * @notice Toggles the ability to call the `flash` function on KatanaV3Pool\n   *\n   * - Requirements: Caller must be the owner.\n   */\n  function toggleFlashLoanPermission() external;\n\n  /**\n   * @notice Enables a fee amount with the given tickSpacing for KatanaV3Factory\n   * @dev Fee amounts may never be removed once enabled. Caller must be the owner.\n   *\n   * @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n   * @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n   * @param feeProtocolNum The numerator of the protocol fee as a ratio of the fee amount\n   * @param feeProtocolDen The denominator of the protocol fee as a ratio of the fee amount\n   */\n  function enableFeeAmount(uint24 fee, int24 tickSpacing, uint8 feeProtocolNum, uint8 feeProtocolDen) external;\n\n  /**\n   * @dev Sets the permission of a token.\n   *\n   * - Requirements: Caller must be the owner.\n   *\n   * @param token The address of the token.\n   * @param whitelistUntil The end of the whitelist duration in seconds.\n   * @param alloweds The addresses to be allowed.\n   * @param statuses The statuses of the addresses.\n   */\n  function setPermission(address token, uint40 whitelistUntil, address[] calldata alloweds, bool[] calldata statuses)\n    external;\n\n  /**\n   * @dev Creates a pair of tokens and sets the permission.\n   *\n   * - Requirements: Caller must be the owner.\n   *\n   * @param tokenA The address of the first token.\n   * @param tokenB The address of the second token.\n   * @param whitelistUntil The end of the whitelist duration in seconds.\n   * @param alloweds The addresses to be allowed.\n   * @param statuses The whitelist statuses of the addresses.\n   * @return pair The address of the pair.\n   */\n  function createPairAndSetPermission(\n    address tokenA,\n    address tokenB,\n    uint40 whitelistUntil,\n    address[] calldata alloweds,\n    bool[] calldata statuses\n  ) external returns (address pair);\n\n  /**\n   * @notice Gets the current router address.\n   */\n  function getRouter() external view returns (address);\n\n  /**\n   * @notice Gets the Katana V3 nonfungible position manager address.\n   */\n  function getPositionManager() external view returns (address);\n\n  /**\n   * @notice Whether the account is always skipped from authorization checks.\n   * @dev See `isAuthorized` function.\n   */\n  function isAllowedActor(address account) external view returns (bool);\n\n  /**\n   * @notice Checks if an account is authorized to interact with a token.\n   *\n   * @param token The address of the token.\n   * @param account The address of the account.\n   * @return True if the account is authorized, otherwise false.\n   */\n  function isAuthorized(address token, address account) external view returns (bool);\n\n  /**\n   * @notice Gets the Katana V3 factory address.\n   */\n  function getV3Factory() external view returns (address);\n\n  /**\n   * @dev Gets the Katana V2 factory address.\n   */\n  function getV2Factory() external view returns (address);\n\n  /**\n   * @notice Gets the whitelist duration of a token.\n   *\n   * @param token The address of the token.\n   * @return The whitelist duration.\n   */\n  function getWhitelistUntil(address token) external view returns (uint40);\n\n  /**\n   * @notice Gets the whitelist information of many tokens.\n   *\n   * @return tokens The addresses of the tokens.\n   * @return whitelistUntils The array of whitelist until timestamps.\n   */\n  function getManyTokensWhitelistInfo()\n    external\n    view\n    returns (address[] memory tokens, uint40[] memory whitelistUntils);\n\n  /**\n   * @notice Gets all whitelisted tokens for given account.\n   *\n   * @param account The address of the account.\n   * @return tokens The addresses of the tokens.\n   * @return whitelistUntils The array of whitelist until timestamps.\n   */\n  function getWhitelistedTokensFor(address account)\n    external\n    view\n    returns (address[] memory tokens, uint40[] memory whitelistUntils);\n\n  /**\n   * @notice Checks if an account is authorized to interact with a path tokens.\n   *\n   * @param tokens The path to swap on.\n   * @param account The address of the account.\n   * @return False if exists one token that the account is not authorized, otherwise true.\n   */\n  function isAuthorized(address[] calldata tokens, address account) external view returns (bool);\n}\n","license":"MIT"}},"version":1},"id":58}